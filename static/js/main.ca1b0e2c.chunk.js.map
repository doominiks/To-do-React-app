{"version":3,"sources":["components/ToDoItem.js","components/InputAdd.js","components/InputSearch.js","components/TodoList.js","index.js"],"names":["ToDoItem","props","id","completed","toggleClass","text","deleteItem","react_default","a","createElement","key","onClick","className","InputAdd","value","change","keypress","type","placeholder","onChange","onKeyPress","InputSearch","Todo","state","addActive","items","addValue","updatedItems","handleAddInputShow","_this","setState","handleAddInputChange","e","target","handleSearchItem","searchedValue","toLowerCase","filter","el","indexOf","handleAddItem","_this$state","newItems","Object","toConsumableArray","push","Date","now","handleCompletedItem","index","currentIndex","includes","splice","stopPropagation","this","findIndex","item","_this2","_this$state2","listItems","map","src_components_ToDoItem","handleDeleteItem","bind","components_InputAdd","components_InputSearch","Component","ReactDOM","render","TodoList","document","getElementById"],"mappings":"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","file":"static/js/main.ca1b0e2c.chunk.js","sourcesContent":["import React from 'react'\nimport './ToDoItem.css';\n\n\nconst ToDoItem = props => {\n    const { id, completed, toggleClass, text, deleteItem } = props\n\n    return (\n        <li key={id} onClick={completed} className={toggleClass ? 'completed' : null}>\n            <button className=\"fa fa-trash\" onClick={deleteItem}></button>\n            {text}\n        </li>\n    );\n}\n\nexport default ToDoItem;","import React from 'react';\n\nconst InputAdd = props => {\n    const { value, change, keypress } = props\n\n    return (\n        <input type=\"text\" placeholder=\"Add New Todo\" value={value} onChange={change} onKeyPress={keypress} />\n    );\n}\n\nexport default InputAdd;","import React from 'react';\n\nconst InputSearch = props => {\n    return (\n        <input type=\"text\" placeholder=\"Search for Todo\"\n            onChange={props.change} />\n    );\n}\n\nexport default InputSearch;","import React, { Component } from 'react';\nimport './ToDoList.css';\nimport ToDoItem from './ToDoItem'\nimport InputAdd from './InputAdd'\nimport InputSearch from './InputSearch'\n\nclass Todo extends Component {\n  state = {\n    addActive: false,\n    items: [],\n    addValue: '',\n    updatedItems: [],\n    completed: []\n  }\n\n  handleAddInputShow = () => {\n    this.setState({\n      addActive: !this.state.addActive\n    })\n  }\n\n  handleAddInputChange = e => {\n    this.setState({\n      addValue: e.target.value,\n    })\n  }\n\n  handleSearchItem = e => {\n    const { items } = this.state\n    let searchedValue = e.target.value.toLowerCase(),\n      updatedItems = items.filter((el) => {\n        let itemValue = el.text.toLowerCase();\n        return itemValue.indexOf(searchedValue) !== -1;\n      })\n\n    this.setState({\n      updatedItems\n    })\n  }\n\n\n  handleAddItem = e => {\n    const { items, addValue } = this.state\n\n    if (e.key === 'Enter' && addValue !== '') {\n      const newItems = [...items];\n      newItems.push({ text: addValue, id: Date.now() })\n\n      this.setState({\n        items: newItems,\n        addValue: \"\",\n        updatedItems: newItems\n\n      })\n    }\n  }\n\n\n  handleDeleteItem(id, e) {\n    e.stopPropagation()\n    const items = [...this.state.items]\n    const index = items.findIndex(item => item.id === id)\n    items.splice(index, 1)\n\n    this.setState({\n      updatedItems: items,\n      items\n    })\n  }\n\n  handleCompletedItem = index => {\n    const completed = [...this.state.completed]\n    const currentIndex = completed.indexOf(index)\n\n    if (completed.includes(index)) {\n      completed.splice(currentIndex, 1)\n    } else {\n      completed.push(index)\n    }\n\n    this.setState({\n      completed\n    })\n  }\n\n  render() {\n\n    const { addActive, addValue, completed, updatedItems } = this.state\n    const listItems = updatedItems.map((item, index) =>\n      <ToDoItem\n        key={item.id}\n        deleteItem={this.handleDeleteItem.bind(this, item.id)}\n        text={item.text}\n        completed={this.handleCompletedItem.bind(this, index)}\n        toggleClass={completed.includes(index)}\n      />)\n\n    return (\n      <div className=\"container\" >\n        <h1 > To - do list\n          < button\n            className=\"fa fa-plus\"\n            onClick={this.handleAddInputShow} >\n          </button>\n        </h1 >\n        {addActive &&\n          <InputAdd\n            value={addValue}\n            change={this.handleAddInputChange}\n            keypress={this.handleAddItem}\n          />}\n        <InputSearch\n          change={this.handleSearchItem}\n        />\n        {updatedItems ? <ul>{listItems} </ul> : updatedItems}\n      </div>\n    );\n  }\n}\n\nexport default Todo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ToDoList from './components/TodoList';\n\n\nReactDOM.render( < ToDoList / > , document.getElementById('root'));"],"sourceRoot":""}